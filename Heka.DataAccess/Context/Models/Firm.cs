//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Heka.DataAccess.Context
{
    using Heka.DataAccess.Context.Models;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Firm
    {
        
        public Firm()
        {
            this.EntryQualityData = new HashSet<EntryQualityData>();
            this.FirmAuthor = new HashSet<FirmAuthor>();
            this.Invoice = new HashSet<Invoice>();
            this.Item = new HashSet<Item>();
            this.ItemOrder = new HashSet<ItemOrder>();
            //this.ItemOrder1 = new HashSet<ItemOrder>();
            //this.ItemOrder2 = new HashSet<ItemOrder>();
            this.Mold = new HashSet<Mold>();
            this.WorkOrder = new HashSet<WorkOrder>();
            this.VehicleInsurance = new HashSet<VehicleInsurance>();
            this.VehicleCare = new HashSet<VehicleCare>();
            this.VehicleTire = new HashSet<VehicleTire>();
            this.FirmTariff = new HashSet<FirmTariff>();
            this.ItemOrderByCustomer = new HashSet<ItemLoad>();
            this.ItemOrderByShipper = new HashSet<ItemLoad>();
            this.ItemOrderByBuyer = new HashSet<ItemLoad>();
            this.ItemLoadByFirmCustomsArrival = new HashSet<ItemLoad>();
            this.VoyageByCarrierFirm = new HashSet<Voyage>();
            this.VoyageDetailByCustomer = new HashSet<VoyageDetail>();
            this.VoyageDetailByShipper = new HashSet<VoyageDetail>();
            this.VoyageDetailByBuyer = new HashSet<VoyageDetail>();
            this.VoyageDetailByFirmCustomsArrival = new HashSet<VoyageDetail>();
            this.FirmAddress = new HashSet<FirmAddress>();

        }

        public int Id { get; set; }
        public string FirmCode { get; set; }
        public string FirmName { get; set; }
        public string FirmTitle { get; set; }

        [ForeignKey("Plant")]
        public Nullable<int> PlantId { get; set; }
        public Nullable<int> FirmType { get; set; }
        public string Explanation { get; set; }
        public string Phone { get; set; }
        public string Gsm { get; set; }
        public string Facebook { get; set; }
        public string Twitter { get; set; }
        public string Instagram { get; set; }
        public string Address { get; set; }
        public string Address2 { get; set; }
        public string Author { get; set; }
        public string Email { get; set; }
        public string TaxNo { get; set; }
        public string TaxOffice { get; set; }

        public decimal? LadametrePrice { get; set; }
        public decimal? MeterCupPrice { get; set; }
        public decimal? WeightPrice { get; set; }
        [ForeignKey("City")]
        public int? CityId { get; set; }
        [ForeignKey("ForexType")]
        public int? ForexTypeId { get; set; }

        [ForeignKey("Country")]
        public int? CountryId { get; set; }

        public Nullable<bool> IsApproved { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<int> CreatedUserId { get; set; }
        public Nullable<System.DateTime> UpdatedDate { get; set; }
        public Nullable<int> UpdatedUserId { get; set; }
    
        
        public virtual ICollection<EntryQualityData> EntryQualityData { get; set; }
        public virtual Plant Plant { get; set; }
        public virtual ForexType ForexType { get; set; }
        public virtual City City { get; set; }
        public virtual Country Country { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<FirmAuthor> FirmAuthor { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<FirmTariff> FirmTariff { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<Invoice> Invoice { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<Item> Item { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<ItemOrder> ItemOrder { get; set; }

        [InverseProperty("FirmCustomer")]
        public virtual ICollection<ItemLoad> ItemOrderByCustomer { get; set; }

        [InverseProperty("FirmShipper")]
        public virtual ICollection<ItemLoad> ItemOrderByShipper { get; set; }

        [InverseProperty("Firmbuyer")]
        public virtual ICollection<ItemLoad> ItemOrderByBuyer { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<ItemReceipt> ItemReceipt { get; set; }
        
        [InverseProperty("Firm")]
        public virtual ICollection<Mold> Mold { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<WorkOrder> WorkOrder { get; set; }


        [InverseProperty("Firm")]
        public virtual ICollection<VehicleInsurance> VehicleInsurance { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<VehicleCare> VehicleCare { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<VehicleTire> VehicleTire { get; set; }

        [InverseProperty("FirmCustomsArrival")]
        public virtual ICollection<ItemLoad> ItemLoadByFirmCustomsArrival { get; set; }

        [InverseProperty("CarrierFirm")]
        public virtual ICollection<Voyage> VoyageByCarrierFirm { get; set; }

        [InverseProperty("FirmCustomer")]
        public virtual ICollection<VoyageDetail> VoyageDetailByCustomer { get; set; }

        [InverseProperty("FirmShipper")]
        public virtual ICollection<VoyageDetail> VoyageDetailByShipper { get; set; }

        [InverseProperty("FirmBuyer")]
        public virtual ICollection<VoyageDetail> VoyageDetailByBuyer { get; set; }

        [InverseProperty("FirmCustomsArrival")]
        public virtual ICollection<VoyageDetail> VoyageDetailByFirmCustomsArrival { get; set; }

        [InverseProperty("Firm")]
        public virtual ICollection<FirmAddress> FirmAddress { get; set; }
    }
}
