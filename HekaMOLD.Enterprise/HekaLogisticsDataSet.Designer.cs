//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HekaMOLD.Enterprise {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("HekaLogisticsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class HekaLogisticsDataSet : global::System.Data.DataSet {
        
        private ItemLoadDataTable tableItemLoad;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public HekaLogisticsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected HekaLogisticsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ItemLoad"] != null)) {
                    base.Tables.Add(new ItemLoadDataTable(ds.Tables["ItemLoad"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemLoadDataTable ItemLoad {
            get {
                return this.tableItemLoad;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            HekaLogisticsDataSet cln = ((HekaLogisticsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ItemLoad"] != null)) {
                    base.Tables.Add(new ItemLoadDataTable(ds.Tables["ItemLoad"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableItemLoad = ((ItemLoadDataTable)(base.Tables["ItemLoad"]));
            if ((initTable == true)) {
                if ((this.tableItemLoad != null)) {
                    this.tableItemLoad.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "HekaLogisticsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/HekaLogisticsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableItemLoad = new ItemLoadDataTable();
            base.Tables.Add(this.tableItemLoad);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeItemLoad() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            HekaLogisticsDataSet ds = new HekaLogisticsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ItemLoadRowChangeEventHandler(object sender, ItemLoadRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemLoadDataTable : global::System.Data.TypedTableBase<ItemLoadRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnLoadCode;
            
            private global::System.Data.DataColumn columnLoadDate;
            
            private global::System.Data.DataColumn columnDischargeDate;
            
            private global::System.Data.DataColumn columnOveralWeight;
            
            private global::System.Data.DataColumn columnOveralVolume;
            
            private global::System.Data.DataColumn columnOveralLadametre;
            
            private global::System.Data.DataColumn columnOverallTotal;
            
            private global::System.Data.DataColumn columnCalculationTypePrice;
            
            private global::System.Data.DataColumn columnExplanation;
            
            private global::System.Data.DataColumn columnShipperFirmId;
            
            private global::System.Data.DataColumn columnBuyerFirmId;
            
            private global::System.Data.DataColumn columnItemOrderId;
            
            private global::System.Data.DataColumn columnPlantId;
            
            private global::System.Data.DataColumn columnCreatedUserId;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnUpdatedUserId;
            
            private global::System.Data.DataColumn columnCreatDate;
            
            private global::System.Data.DataColumn columnLoadStatusType;
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnOrderUploadType;
            
            private global::System.Data.DataColumn columnOrderUploadPointType;
            
            private global::System.Data.DataColumn columnOrderTransactionDirectionType;
            
            private global::System.Data.DataColumn columnOrderCalculationType;
            
            private global::System.Data.DataColumn columnLoadOutDate;
            
            private global::System.Data.DataColumn columnCustomerFirmId;
            
            private global::System.Data.DataColumn columnEntryCustomsId;
            
            private global::System.Data.DataColumn columnExitCustomsId;
            
            private global::System.Data.DataColumn columnDateOfNeed;
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnLoadingDate;
            
            private global::System.Data.DataColumn columnInvoiceId;
            
            private global::System.Data.DataColumn columnInvoiceStatus;
            
            private global::System.Data.DataColumn columnInvoiceFreightPrice;
            
            private global::System.Data.DataColumn columnUserAuthorId;
            
            private global::System.Data.DataColumn columnShipperCityId;
            
            private global::System.Data.DataColumn columnBuyerCityId;
            
            private global::System.Data.DataColumn columnShipperCountryId;
            
            private global::System.Data.DataColumn columnBuyerCountryId;
            
            private global::System.Data.DataColumn columnShipperFirmExplanation;
            
            private global::System.Data.DataColumn columnBuyerFirmExplanation;
            
            private global::System.Data.DataColumn columnOveralQuantity;
            
            private global::System.Data.DataColumn columnForexTypeId;
            
            private global::System.Data.DataColumn columnReadinessDate;
            
            private global::System.Data.DataColumn columnDeliveryFromCustomerDate;
            
            private global::System.Data.DataColumn columnIntendedArrivalDate;
            
            private global::System.Data.DataColumn columnCustomsExplanation;
            
            private global::System.Data.DataColumn columnT1T2No;
            
            private global::System.Data.DataColumn columnTClosingDate;
            
            private global::System.Data.DataColumn columnItemPrice;
            
            private global::System.Data.DataColumn columnTrailerType;
            
            private global::System.Data.DataColumn columnHasItemInsurance;
            
            private global::System.Data.DataColumn columnItemInsuranceDraftNo;
            
            private global::System.Data.DataColumn columnHasItemDangerous;
            
            private global::System.Data.DataColumn columnCmrCustomerDeliveryDate;
            
            private global::System.Data.DataColumn columnBringingToWarehousePlate;
            
            private global::System.Data.DataColumn columnHasCmrDeliveryed;
            
            private global::System.Data.DataColumn columnCmrNo;
            
            private global::System.Data.DataColumn columnCmrStatus;
            
            private global::System.Data.DataColumn columnFirmCustomsArrivalId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadDataTable() {
                this.TableName = "ItemLoad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ItemLoadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ItemLoadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoadCodeColumn {
                get {
                    return this.columnLoadCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoadDateColumn {
                get {
                    return this.columnLoadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DischargeDateColumn {
                get {
                    return this.columnDischargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OveralWeightColumn {
                get {
                    return this.columnOveralWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OveralVolumeColumn {
                get {
                    return this.columnOveralVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OveralLadametreColumn {
                get {
                    return this.columnOveralLadametre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OverallTotalColumn {
                get {
                    return this.columnOverallTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CalculationTypePriceColumn {
                get {
                    return this.columnCalculationTypePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExplanationColumn {
                get {
                    return this.columnExplanation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShipperFirmIdColumn {
                get {
                    return this.columnShipperFirmId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuyerFirmIdColumn {
                get {
                    return this.columnBuyerFirmId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ItemOrderIdColumn {
                get {
                    return this.columnItemOrderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PlantIdColumn {
                get {
                    return this.columnPlantId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedUserIdColumn {
                get {
                    return this.columnCreatedUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedUserIdColumn {
                get {
                    return this.columnUpdatedUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatDateColumn {
                get {
                    return this.columnCreatDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoadStatusTypeColumn {
                get {
                    return this.columnLoadStatusType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OrderUploadTypeColumn {
                get {
                    return this.columnOrderUploadType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OrderUploadPointTypeColumn {
                get {
                    return this.columnOrderUploadPointType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OrderTransactionDirectionTypeColumn {
                get {
                    return this.columnOrderTransactionDirectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OrderCalculationTypeColumn {
                get {
                    return this.columnOrderCalculationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoadOutDateColumn {
                get {
                    return this.columnLoadOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CustomerFirmIdColumn {
                get {
                    return this.columnCustomerFirmId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EntryCustomsIdColumn {
                get {
                    return this.columnEntryCustomsId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExitCustomsIdColumn {
                get {
                    return this.columnExitCustomsId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateOfNeedColumn {
                get {
                    return this.columnDateOfNeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoadingDateColumn {
                get {
                    return this.columnLoadingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceIdColumn {
                get {
                    return this.columnInvoiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceStatusColumn {
                get {
                    return this.columnInvoiceStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceFreightPriceColumn {
                get {
                    return this.columnInvoiceFreightPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserAuthorIdColumn {
                get {
                    return this.columnUserAuthorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShipperCityIdColumn {
                get {
                    return this.columnShipperCityId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuyerCityIdColumn {
                get {
                    return this.columnBuyerCityId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShipperCountryIdColumn {
                get {
                    return this.columnShipperCountryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuyerCountryIdColumn {
                get {
                    return this.columnBuyerCountryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShipperFirmExplanationColumn {
                get {
                    return this.columnShipperFirmExplanation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuyerFirmExplanationColumn {
                get {
                    return this.columnBuyerFirmExplanation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OveralQuantityColumn {
                get {
                    return this.columnOveralQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ForexTypeIdColumn {
                get {
                    return this.columnForexTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReadinessDateColumn {
                get {
                    return this.columnReadinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DeliveryFromCustomerDateColumn {
                get {
                    return this.columnDeliveryFromCustomerDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IntendedArrivalDateColumn {
                get {
                    return this.columnIntendedArrivalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CustomsExplanationColumn {
                get {
                    return this.columnCustomsExplanation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn T1T2NoColumn {
                get {
                    return this.columnT1T2No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TClosingDateColumn {
                get {
                    return this.columnTClosingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ItemPriceColumn {
                get {
                    return this.columnItemPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrailerTypeColumn {
                get {
                    return this.columnTrailerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasItemInsuranceColumn {
                get {
                    return this.columnHasItemInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ItemInsuranceDraftNoColumn {
                get {
                    return this.columnItemInsuranceDraftNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasItemDangerousColumn {
                get {
                    return this.columnHasItemDangerous;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CmrCustomerDeliveryDateColumn {
                get {
                    return this.columnCmrCustomerDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BringingToWarehousePlateColumn {
                get {
                    return this.columnBringingToWarehousePlate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HasCmrDeliveryedColumn {
                get {
                    return this.columnHasCmrDeliveryed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CmrNoColumn {
                get {
                    return this.columnCmrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CmrStatusColumn {
                get {
                    return this.columnCmrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FirmCustomsArrivalIdColumn {
                get {
                    return this.columnFirmCustomsArrivalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadRow this[int index] {
                get {
                    return ((ItemLoadRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ItemLoadRowChangeEventHandler ItemLoadRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ItemLoadRowChangeEventHandler ItemLoadRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ItemLoadRowChangeEventHandler ItemLoadRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ItemLoadRowChangeEventHandler ItemLoadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddItemLoadRow(ItemLoadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadRow AddItemLoadRow(
                        string LoadCode, 
                        System.DateTime LoadDate, 
                        System.DateTime DischargeDate, 
                        decimal OveralWeight, 
                        decimal OveralVolume, 
                        decimal OveralLadametre, 
                        decimal OverallTotal, 
                        decimal CalculationTypePrice, 
                        string Explanation, 
                        int ShipperFirmId, 
                        int BuyerFirmId, 
                        int ItemOrderId, 
                        int PlantId, 
                        int CreatedUserId, 
                        System.DateTime UpdatedDate, 
                        int UpdatedUserId, 
                        System.DateTime CreatDate, 
                        int LoadStatusType, 
                        string DocumentNo, 
                        int OrderUploadType, 
                        int OrderUploadPointType, 
                        int OrderTransactionDirectionType, 
                        int OrderCalculationType, 
                        System.DateTime LoadOutDate, 
                        int CustomerFirmId, 
                        int EntryCustomsId, 
                        int ExitCustomsId, 
                        System.DateTime DateOfNeed, 
                        string OrderNo, 
                        System.DateTime LoadingDate, 
                        int InvoiceId, 
                        int InvoiceStatus, 
                        decimal InvoiceFreightPrice, 
                        int UserAuthorId, 
                        int ShipperCityId, 
                        int BuyerCityId, 
                        int ShipperCountryId, 
                        int BuyerCountryId, 
                        string ShipperFirmExplanation, 
                        string BuyerFirmExplanation, 
                        int OveralQuantity, 
                        int ForexTypeId, 
                        System.DateTime ReadinessDate, 
                        System.DateTime DeliveryFromCustomerDate, 
                        System.DateTime IntendedArrivalDate, 
                        string CustomsExplanation, 
                        string T1T2No, 
                        System.DateTime TClosingDate, 
                        decimal ItemPrice, 
                        int TrailerType, 
                        bool HasItemInsurance, 
                        string ItemInsuranceDraftNo, 
                        bool HasItemDangerous, 
                        System.DateTime CmrCustomerDeliveryDate, 
                        string BringingToWarehousePlate, 
                        bool HasCmrDeliveryed, 
                        string CmrNo, 
                        int CmrStatus, 
                        int FirmCustomsArrivalId) {
                ItemLoadRow rowItemLoadRow = ((ItemLoadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LoadCode,
                        LoadDate,
                        DischargeDate,
                        OveralWeight,
                        OveralVolume,
                        OveralLadametre,
                        OverallTotal,
                        CalculationTypePrice,
                        Explanation,
                        ShipperFirmId,
                        BuyerFirmId,
                        ItemOrderId,
                        PlantId,
                        CreatedUserId,
                        UpdatedDate,
                        UpdatedUserId,
                        CreatDate,
                        LoadStatusType,
                        DocumentNo,
                        OrderUploadType,
                        OrderUploadPointType,
                        OrderTransactionDirectionType,
                        OrderCalculationType,
                        LoadOutDate,
                        CustomerFirmId,
                        EntryCustomsId,
                        ExitCustomsId,
                        DateOfNeed,
                        OrderNo,
                        LoadingDate,
                        InvoiceId,
                        InvoiceStatus,
                        InvoiceFreightPrice,
                        UserAuthorId,
                        ShipperCityId,
                        BuyerCityId,
                        ShipperCountryId,
                        BuyerCountryId,
                        ShipperFirmExplanation,
                        BuyerFirmExplanation,
                        OveralQuantity,
                        ForexTypeId,
                        ReadinessDate,
                        DeliveryFromCustomerDate,
                        IntendedArrivalDate,
                        CustomsExplanation,
                        T1T2No,
                        TClosingDate,
                        ItemPrice,
                        TrailerType,
                        HasItemInsurance,
                        ItemInsuranceDraftNo,
                        HasItemDangerous,
                        CmrCustomerDeliveryDate,
                        BringingToWarehousePlate,
                        HasCmrDeliveryed,
                        CmrNo,
                        CmrStatus,
                        FirmCustomsArrivalId};
                rowItemLoadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemLoadRow);
                return rowItemLoadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadRow FindById(int Id) {
                return ((ItemLoadRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ItemLoadDataTable cln = ((ItemLoadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemLoadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnLoadCode = base.Columns["LoadCode"];
                this.columnLoadDate = base.Columns["LoadDate"];
                this.columnDischargeDate = base.Columns["DischargeDate"];
                this.columnOveralWeight = base.Columns["OveralWeight"];
                this.columnOveralVolume = base.Columns["OveralVolume"];
                this.columnOveralLadametre = base.Columns["OveralLadametre"];
                this.columnOverallTotal = base.Columns["OverallTotal"];
                this.columnCalculationTypePrice = base.Columns["CalculationTypePrice"];
                this.columnExplanation = base.Columns["Explanation"];
                this.columnShipperFirmId = base.Columns["ShipperFirmId"];
                this.columnBuyerFirmId = base.Columns["BuyerFirmId"];
                this.columnItemOrderId = base.Columns["ItemOrderId"];
                this.columnPlantId = base.Columns["PlantId"];
                this.columnCreatedUserId = base.Columns["CreatedUserId"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnUpdatedUserId = base.Columns["UpdatedUserId"];
                this.columnCreatDate = base.Columns["CreatDate"];
                this.columnLoadStatusType = base.Columns["LoadStatusType"];
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnOrderUploadType = base.Columns["OrderUploadType"];
                this.columnOrderUploadPointType = base.Columns["OrderUploadPointType"];
                this.columnOrderTransactionDirectionType = base.Columns["OrderTransactionDirectionType"];
                this.columnOrderCalculationType = base.Columns["OrderCalculationType"];
                this.columnLoadOutDate = base.Columns["LoadOutDate"];
                this.columnCustomerFirmId = base.Columns["CustomerFirmId"];
                this.columnEntryCustomsId = base.Columns["EntryCustomsId"];
                this.columnExitCustomsId = base.Columns["ExitCustomsId"];
                this.columnDateOfNeed = base.Columns["DateOfNeed"];
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnLoadingDate = base.Columns["LoadingDate"];
                this.columnInvoiceId = base.Columns["InvoiceId"];
                this.columnInvoiceStatus = base.Columns["InvoiceStatus"];
                this.columnInvoiceFreightPrice = base.Columns["InvoiceFreightPrice"];
                this.columnUserAuthorId = base.Columns["UserAuthorId"];
                this.columnShipperCityId = base.Columns["ShipperCityId"];
                this.columnBuyerCityId = base.Columns["BuyerCityId"];
                this.columnShipperCountryId = base.Columns["ShipperCountryId"];
                this.columnBuyerCountryId = base.Columns["BuyerCountryId"];
                this.columnShipperFirmExplanation = base.Columns["ShipperFirmExplanation"];
                this.columnBuyerFirmExplanation = base.Columns["BuyerFirmExplanation"];
                this.columnOveralQuantity = base.Columns["OveralQuantity"];
                this.columnForexTypeId = base.Columns["ForexTypeId"];
                this.columnReadinessDate = base.Columns["ReadinessDate"];
                this.columnDeliveryFromCustomerDate = base.Columns["DeliveryFromCustomerDate"];
                this.columnIntendedArrivalDate = base.Columns["IntendedArrivalDate"];
                this.columnCustomsExplanation = base.Columns["CustomsExplanation"];
                this.columnT1T2No = base.Columns["T1T2No"];
                this.columnTClosingDate = base.Columns["TClosingDate"];
                this.columnItemPrice = base.Columns["ItemPrice"];
                this.columnTrailerType = base.Columns["TrailerType"];
                this.columnHasItemInsurance = base.Columns["HasItemInsurance"];
                this.columnItemInsuranceDraftNo = base.Columns["ItemInsuranceDraftNo"];
                this.columnHasItemDangerous = base.Columns["HasItemDangerous"];
                this.columnCmrCustomerDeliveryDate = base.Columns["CmrCustomerDeliveryDate"];
                this.columnBringingToWarehousePlate = base.Columns["BringingToWarehousePlate"];
                this.columnHasCmrDeliveryed = base.Columns["HasCmrDeliveryed"];
                this.columnCmrNo = base.Columns["CmrNo"];
                this.columnCmrStatus = base.Columns["CmrStatus"];
                this.columnFirmCustomsArrivalId = base.Columns["FirmCustomsArrivalId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnLoadCode = new global::System.Data.DataColumn("LoadCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoadCode);
                this.columnLoadDate = new global::System.Data.DataColumn("LoadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoadDate);
                this.columnDischargeDate = new global::System.Data.DataColumn("DischargeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDate);
                this.columnOveralWeight = new global::System.Data.DataColumn("OveralWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOveralWeight);
                this.columnOveralVolume = new global::System.Data.DataColumn("OveralVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOveralVolume);
                this.columnOveralLadametre = new global::System.Data.DataColumn("OveralLadametre", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOveralLadametre);
                this.columnOverallTotal = new global::System.Data.DataColumn("OverallTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallTotal);
                this.columnCalculationTypePrice = new global::System.Data.DataColumn("CalculationTypePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalculationTypePrice);
                this.columnExplanation = new global::System.Data.DataColumn("Explanation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExplanation);
                this.columnShipperFirmId = new global::System.Data.DataColumn("ShipperFirmId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperFirmId);
                this.columnBuyerFirmId = new global::System.Data.DataColumn("BuyerFirmId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerFirmId);
                this.columnItemOrderId = new global::System.Data.DataColumn("ItemOrderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemOrderId);
                this.columnPlantId = new global::System.Data.DataColumn("PlantId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlantId);
                this.columnCreatedUserId = new global::System.Data.DataColumn("CreatedUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedUserId);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnUpdatedUserId = new global::System.Data.DataColumn("UpdatedUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedUserId);
                this.columnCreatDate = new global::System.Data.DataColumn("CreatDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatDate);
                this.columnLoadStatusType = new global::System.Data.DataColumn("LoadStatusType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoadStatusType);
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnOrderUploadType = new global::System.Data.DataColumn("OrderUploadType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderUploadType);
                this.columnOrderUploadPointType = new global::System.Data.DataColumn("OrderUploadPointType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderUploadPointType);
                this.columnOrderTransactionDirectionType = new global::System.Data.DataColumn("OrderTransactionDirectionType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderTransactionDirectionType);
                this.columnOrderCalculationType = new global::System.Data.DataColumn("OrderCalculationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCalculationType);
                this.columnLoadOutDate = new global::System.Data.DataColumn("LoadOutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoadOutDate);
                this.columnCustomerFirmId = new global::System.Data.DataColumn("CustomerFirmId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerFirmId);
                this.columnEntryCustomsId = new global::System.Data.DataColumn("EntryCustomsId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryCustomsId);
                this.columnExitCustomsId = new global::System.Data.DataColumn("ExitCustomsId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExitCustomsId);
                this.columnDateOfNeed = new global::System.Data.DataColumn("DateOfNeed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfNeed);
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnLoadingDate = new global::System.Data.DataColumn("LoadingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoadingDate);
                this.columnInvoiceId = new global::System.Data.DataColumn("InvoiceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceId);
                this.columnInvoiceStatus = new global::System.Data.DataColumn("InvoiceStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceStatus);
                this.columnInvoiceFreightPrice = new global::System.Data.DataColumn("InvoiceFreightPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFreightPrice);
                this.columnUserAuthorId = new global::System.Data.DataColumn("UserAuthorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserAuthorId);
                this.columnShipperCityId = new global::System.Data.DataColumn("ShipperCityId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperCityId);
                this.columnBuyerCityId = new global::System.Data.DataColumn("BuyerCityId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerCityId);
                this.columnShipperCountryId = new global::System.Data.DataColumn("ShipperCountryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperCountryId);
                this.columnBuyerCountryId = new global::System.Data.DataColumn("BuyerCountryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerCountryId);
                this.columnShipperFirmExplanation = new global::System.Data.DataColumn("ShipperFirmExplanation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperFirmExplanation);
                this.columnBuyerFirmExplanation = new global::System.Data.DataColumn("BuyerFirmExplanation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerFirmExplanation);
                this.columnOveralQuantity = new global::System.Data.DataColumn("OveralQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOveralQuantity);
                this.columnForexTypeId = new global::System.Data.DataColumn("ForexTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForexTypeId);
                this.columnReadinessDate = new global::System.Data.DataColumn("ReadinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReadinessDate);
                this.columnDeliveryFromCustomerDate = new global::System.Data.DataColumn("DeliveryFromCustomerDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryFromCustomerDate);
                this.columnIntendedArrivalDate = new global::System.Data.DataColumn("IntendedArrivalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntendedArrivalDate);
                this.columnCustomsExplanation = new global::System.Data.DataColumn("CustomsExplanation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsExplanation);
                this.columnT1T2No = new global::System.Data.DataColumn("T1T2No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT1T2No);
                this.columnTClosingDate = new global::System.Data.DataColumn("TClosingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTClosingDate);
                this.columnItemPrice = new global::System.Data.DataColumn("ItemPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemPrice);
                this.columnTrailerType = new global::System.Data.DataColumn("TrailerType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrailerType);
                this.columnHasItemInsurance = new global::System.Data.DataColumn("HasItemInsurance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasItemInsurance);
                this.columnItemInsuranceDraftNo = new global::System.Data.DataColumn("ItemInsuranceDraftNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemInsuranceDraftNo);
                this.columnHasItemDangerous = new global::System.Data.DataColumn("HasItemDangerous", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasItemDangerous);
                this.columnCmrCustomerDeliveryDate = new global::System.Data.DataColumn("CmrCustomerDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCmrCustomerDeliveryDate);
                this.columnBringingToWarehousePlate = new global::System.Data.DataColumn("BringingToWarehousePlate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBringingToWarehousePlate);
                this.columnHasCmrDeliveryed = new global::System.Data.DataColumn("HasCmrDeliveryed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasCmrDeliveryed);
                this.columnCmrNo = new global::System.Data.DataColumn("CmrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCmrNo);
                this.columnCmrStatus = new global::System.Data.DataColumn("CmrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCmrStatus);
                this.columnFirmCustomsArrivalId = new global::System.Data.DataColumn("FirmCustomsArrivalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirmCustomsArrivalId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnLoadCode.MaxLength = 2147483647;
                this.columnExplanation.MaxLength = 2147483647;
                this.columnDocumentNo.MaxLength = 2147483647;
                this.columnOrderNo.MaxLength = 2147483647;
                this.columnShipperFirmExplanation.MaxLength = 2147483647;
                this.columnBuyerFirmExplanation.MaxLength = 2147483647;
                this.columnCustomsExplanation.MaxLength = 2147483647;
                this.columnT1T2No.MaxLength = 2147483647;
                this.columnItemInsuranceDraftNo.MaxLength = 2147483647;
                this.columnBringingToWarehousePlate.MaxLength = 2147483647;
                this.columnCmrNo.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadRow NewItemLoadRow() {
                return ((ItemLoadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemLoadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ItemLoadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemLoadRowChanged != null)) {
                    this.ItemLoadRowChanged(this, new ItemLoadRowChangeEvent(((ItemLoadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemLoadRowChanging != null)) {
                    this.ItemLoadRowChanging(this, new ItemLoadRowChangeEvent(((ItemLoadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemLoadRowDeleted != null)) {
                    this.ItemLoadRowDeleted(this, new ItemLoadRowChangeEvent(((ItemLoadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemLoadRowDeleting != null)) {
                    this.ItemLoadRowDeleting(this, new ItemLoadRowChangeEvent(((ItemLoadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveItemLoadRow(ItemLoadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HekaLogisticsDataSet ds = new HekaLogisticsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemLoadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ItemLoadRow : global::System.Data.DataRow {
            
            private ItemLoadDataTable tableItemLoad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ItemLoadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemLoad = ((ItemLoadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableItemLoad.IdColumn]));
                }
                set {
                    this[this.tableItemLoad.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LoadCode {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.LoadCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoadCode\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.LoadCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LoadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.LoadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoadDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.LoadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DischargeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.DischargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.DischargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OveralWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.OveralWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OveralWeight\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OveralWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OveralVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.OveralVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OveralVolume\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OveralVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OveralLadametre {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.OveralLadametreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OveralLadametre\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OveralLadametreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OverallTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.OverallTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallTotal\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OverallTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CalculationTypePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.CalculationTypePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalculationTypePrice\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CalculationTypePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Explanation {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.ExplanationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Explanation\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ExplanationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ShipperFirmId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.ShipperFirmIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperFirmId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ShipperFirmIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BuyerFirmId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.BuyerFirmIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerFirmId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.BuyerFirmIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ItemOrderId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.ItemOrderIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemOrderId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ItemOrderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PlantId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.PlantIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlantId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.PlantIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CreatedUserId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.CreatedUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedUserId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CreatedUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UpdatedUserId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.UpdatedUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedUserId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.UpdatedUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreatDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.CreatDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CreatDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LoadStatusType {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.LoadStatusTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoadStatusType\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.LoadStatusTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DocumentNo {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OrderUploadType {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.OrderUploadTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderUploadType\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OrderUploadTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OrderUploadPointType {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.OrderUploadPointTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderUploadPointType\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OrderUploadPointTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OrderTransactionDirectionType {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.OrderTransactionDirectionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderTransactionDirectionType\' in table \'ItemLoad\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OrderTransactionDirectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OrderCalculationType {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.OrderCalculationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCalculationType\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OrderCalculationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LoadOutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.LoadOutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoadOutDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.LoadOutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CustomerFirmId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.CustomerFirmIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerFirmId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CustomerFirmIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int EntryCustomsId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.EntryCustomsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryCustomsId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.EntryCustomsIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ExitCustomsId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.ExitCustomsIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExitCustomsId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ExitCustomsIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DateOfNeed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.DateOfNeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfNeed\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.DateOfNeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OrderNo {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.OrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderNo\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LoadingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.LoadingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoadingDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.LoadingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InvoiceId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.InvoiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.InvoiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InvoiceStatus {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.InvoiceStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceStatus\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.InvoiceStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InvoiceFreightPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.InvoiceFreightPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceFreightPrice\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.InvoiceFreightPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UserAuthorId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.UserAuthorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserAuthorId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.UserAuthorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ShipperCityId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.ShipperCityIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperCityId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ShipperCityIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BuyerCityId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.BuyerCityIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerCityId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.BuyerCityIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ShipperCountryId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.ShipperCountryIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperCountryId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ShipperCountryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BuyerCountryId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.BuyerCountryIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerCountryId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.BuyerCountryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ShipperFirmExplanation {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.ShipperFirmExplanationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperFirmExplanation\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ShipperFirmExplanationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuyerFirmExplanation {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.BuyerFirmExplanationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerFirmExplanation\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.BuyerFirmExplanationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OveralQuantity {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.OveralQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OveralQuantity\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.OveralQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ForexTypeId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.ForexTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForexTypeId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ForexTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ReadinessDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.ReadinessDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReadinessDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ReadinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DeliveryFromCustomerDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.DeliveryFromCustomerDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryFromCustomerDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.DeliveryFromCustomerDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime IntendedArrivalDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.IntendedArrivalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntendedArrivalDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.IntendedArrivalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CustomsExplanation {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.CustomsExplanationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsExplanation\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CustomsExplanationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string T1T2No {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.T1T2NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'T1T2No\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.T1T2NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime TClosingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.TClosingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TClosingDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.TClosingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ItemPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableItemLoad.ItemPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemPrice\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ItemPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int TrailerType {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.TrailerTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrailerType\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.TrailerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasItemInsurance {
                get {
                    try {
                        return ((bool)(this[this.tableItemLoad.HasItemInsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasItemInsurance\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.HasItemInsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ItemInsuranceDraftNo {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.ItemInsuranceDraftNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemInsuranceDraftNo\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.ItemInsuranceDraftNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasItemDangerous {
                get {
                    try {
                        return ((bool)(this[this.tableItemLoad.HasItemDangerousColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasItemDangerous\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.HasItemDangerousColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CmrCustomerDeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemLoad.CmrCustomerDeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CmrCustomerDeliveryDate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CmrCustomerDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BringingToWarehousePlate {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.BringingToWarehousePlateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BringingToWarehousePlate\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.BringingToWarehousePlateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HasCmrDeliveryed {
                get {
                    try {
                        return ((bool)(this[this.tableItemLoad.HasCmrDeliveryedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasCmrDeliveryed\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.HasCmrDeliveryedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CmrNo {
                get {
                    try {
                        return ((string)(this[this.tableItemLoad.CmrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CmrNo\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CmrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CmrStatus {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.CmrStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CmrStatus\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.CmrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FirmCustomsArrivalId {
                get {
                    try {
                        return ((int)(this[this.tableItemLoad.FirmCustomsArrivalIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirmCustomsArrivalId\' in table \'ItemLoad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemLoad.FirmCustomsArrivalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLoadCodeNull() {
                return this.IsNull(this.tableItemLoad.LoadCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLoadCodeNull() {
                this[this.tableItemLoad.LoadCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLoadDateNull() {
                return this.IsNull(this.tableItemLoad.LoadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLoadDateNull() {
                this[this.tableItemLoad.LoadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDischargeDateNull() {
                return this.IsNull(this.tableItemLoad.DischargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDischargeDateNull() {
                this[this.tableItemLoad.DischargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOveralWeightNull() {
                return this.IsNull(this.tableItemLoad.OveralWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOveralWeightNull() {
                this[this.tableItemLoad.OveralWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOveralVolumeNull() {
                return this.IsNull(this.tableItemLoad.OveralVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOveralVolumeNull() {
                this[this.tableItemLoad.OveralVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOveralLadametreNull() {
                return this.IsNull(this.tableItemLoad.OveralLadametreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOveralLadametreNull() {
                this[this.tableItemLoad.OveralLadametreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOverallTotalNull() {
                return this.IsNull(this.tableItemLoad.OverallTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOverallTotalNull() {
                this[this.tableItemLoad.OverallTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCalculationTypePriceNull() {
                return this.IsNull(this.tableItemLoad.CalculationTypePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCalculationTypePriceNull() {
                this[this.tableItemLoad.CalculationTypePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExplanationNull() {
                return this.IsNull(this.tableItemLoad.ExplanationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExplanationNull() {
                this[this.tableItemLoad.ExplanationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShipperFirmIdNull() {
                return this.IsNull(this.tableItemLoad.ShipperFirmIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShipperFirmIdNull() {
                this[this.tableItemLoad.ShipperFirmIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuyerFirmIdNull() {
                return this.IsNull(this.tableItemLoad.BuyerFirmIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuyerFirmIdNull() {
                this[this.tableItemLoad.BuyerFirmIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsItemOrderIdNull() {
                return this.IsNull(this.tableItemLoad.ItemOrderIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetItemOrderIdNull() {
                this[this.tableItemLoad.ItemOrderIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPlantIdNull() {
                return this.IsNull(this.tableItemLoad.PlantIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPlantIdNull() {
                this[this.tableItemLoad.PlantIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedUserIdNull() {
                return this.IsNull(this.tableItemLoad.CreatedUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedUserIdNull() {
                this[this.tableItemLoad.CreatedUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableItemLoad.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tableItemLoad.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedUserIdNull() {
                return this.IsNull(this.tableItemLoad.UpdatedUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedUserIdNull() {
                this[this.tableItemLoad.UpdatedUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatDateNull() {
                return this.IsNull(this.tableItemLoad.CreatDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatDateNull() {
                this[this.tableItemLoad.CreatDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLoadStatusTypeNull() {
                return this.IsNull(this.tableItemLoad.LoadStatusTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLoadStatusTypeNull() {
                this[this.tableItemLoad.LoadStatusTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tableItemLoad.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDocumentNoNull() {
                this[this.tableItemLoad.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrderUploadTypeNull() {
                return this.IsNull(this.tableItemLoad.OrderUploadTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrderUploadTypeNull() {
                this[this.tableItemLoad.OrderUploadTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrderUploadPointTypeNull() {
                return this.IsNull(this.tableItemLoad.OrderUploadPointTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrderUploadPointTypeNull() {
                this[this.tableItemLoad.OrderUploadPointTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrderTransactionDirectionTypeNull() {
                return this.IsNull(this.tableItemLoad.OrderTransactionDirectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrderTransactionDirectionTypeNull() {
                this[this.tableItemLoad.OrderTransactionDirectionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrderCalculationTypeNull() {
                return this.IsNull(this.tableItemLoad.OrderCalculationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrderCalculationTypeNull() {
                this[this.tableItemLoad.OrderCalculationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLoadOutDateNull() {
                return this.IsNull(this.tableItemLoad.LoadOutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLoadOutDateNull() {
                this[this.tableItemLoad.LoadOutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCustomerFirmIdNull() {
                return this.IsNull(this.tableItemLoad.CustomerFirmIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCustomerFirmIdNull() {
                this[this.tableItemLoad.CustomerFirmIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEntryCustomsIdNull() {
                return this.IsNull(this.tableItemLoad.EntryCustomsIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEntryCustomsIdNull() {
                this[this.tableItemLoad.EntryCustomsIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExitCustomsIdNull() {
                return this.IsNull(this.tableItemLoad.ExitCustomsIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExitCustomsIdNull() {
                this[this.tableItemLoad.ExitCustomsIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateOfNeedNull() {
                return this.IsNull(this.tableItemLoad.DateOfNeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateOfNeedNull() {
                this[this.tableItemLoad.DateOfNeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOrderNoNull() {
                return this.IsNull(this.tableItemLoad.OrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOrderNoNull() {
                this[this.tableItemLoad.OrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLoadingDateNull() {
                return this.IsNull(this.tableItemLoad.LoadingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLoadingDateNull() {
                this[this.tableItemLoad.LoadingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceIdNull() {
                return this.IsNull(this.tableItemLoad.InvoiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceIdNull() {
                this[this.tableItemLoad.InvoiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceStatusNull() {
                return this.IsNull(this.tableItemLoad.InvoiceStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceStatusNull() {
                this[this.tableItemLoad.InvoiceStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceFreightPriceNull() {
                return this.IsNull(this.tableItemLoad.InvoiceFreightPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceFreightPriceNull() {
                this[this.tableItemLoad.InvoiceFreightPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserAuthorIdNull() {
                return this.IsNull(this.tableItemLoad.UserAuthorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserAuthorIdNull() {
                this[this.tableItemLoad.UserAuthorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShipperCityIdNull() {
                return this.IsNull(this.tableItemLoad.ShipperCityIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShipperCityIdNull() {
                this[this.tableItemLoad.ShipperCityIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuyerCityIdNull() {
                return this.IsNull(this.tableItemLoad.BuyerCityIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuyerCityIdNull() {
                this[this.tableItemLoad.BuyerCityIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShipperCountryIdNull() {
                return this.IsNull(this.tableItemLoad.ShipperCountryIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShipperCountryIdNull() {
                this[this.tableItemLoad.ShipperCountryIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuyerCountryIdNull() {
                return this.IsNull(this.tableItemLoad.BuyerCountryIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuyerCountryIdNull() {
                this[this.tableItemLoad.BuyerCountryIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShipperFirmExplanationNull() {
                return this.IsNull(this.tableItemLoad.ShipperFirmExplanationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShipperFirmExplanationNull() {
                this[this.tableItemLoad.ShipperFirmExplanationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuyerFirmExplanationNull() {
                return this.IsNull(this.tableItemLoad.BuyerFirmExplanationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuyerFirmExplanationNull() {
                this[this.tableItemLoad.BuyerFirmExplanationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOveralQuantityNull() {
                return this.IsNull(this.tableItemLoad.OveralQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOveralQuantityNull() {
                this[this.tableItemLoad.OveralQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsForexTypeIdNull() {
                return this.IsNull(this.tableItemLoad.ForexTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetForexTypeIdNull() {
                this[this.tableItemLoad.ForexTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReadinessDateNull() {
                return this.IsNull(this.tableItemLoad.ReadinessDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReadinessDateNull() {
                this[this.tableItemLoad.ReadinessDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDeliveryFromCustomerDateNull() {
                return this.IsNull(this.tableItemLoad.DeliveryFromCustomerDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDeliveryFromCustomerDateNull() {
                this[this.tableItemLoad.DeliveryFromCustomerDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIntendedArrivalDateNull() {
                return this.IsNull(this.tableItemLoad.IntendedArrivalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIntendedArrivalDateNull() {
                this[this.tableItemLoad.IntendedArrivalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCustomsExplanationNull() {
                return this.IsNull(this.tableItemLoad.CustomsExplanationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCustomsExplanationNull() {
                this[this.tableItemLoad.CustomsExplanationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsT1T2NoNull() {
                return this.IsNull(this.tableItemLoad.T1T2NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetT1T2NoNull() {
                this[this.tableItemLoad.T1T2NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTClosingDateNull() {
                return this.IsNull(this.tableItemLoad.TClosingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTClosingDateNull() {
                this[this.tableItemLoad.TClosingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsItemPriceNull() {
                return this.IsNull(this.tableItemLoad.ItemPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetItemPriceNull() {
                this[this.tableItemLoad.ItemPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrailerTypeNull() {
                return this.IsNull(this.tableItemLoad.TrailerTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrailerTypeNull() {
                this[this.tableItemLoad.TrailerTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHasItemInsuranceNull() {
                return this.IsNull(this.tableItemLoad.HasItemInsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHasItemInsuranceNull() {
                this[this.tableItemLoad.HasItemInsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsItemInsuranceDraftNoNull() {
                return this.IsNull(this.tableItemLoad.ItemInsuranceDraftNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetItemInsuranceDraftNoNull() {
                this[this.tableItemLoad.ItemInsuranceDraftNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHasItemDangerousNull() {
                return this.IsNull(this.tableItemLoad.HasItemDangerousColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHasItemDangerousNull() {
                this[this.tableItemLoad.HasItemDangerousColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCmrCustomerDeliveryDateNull() {
                return this.IsNull(this.tableItemLoad.CmrCustomerDeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCmrCustomerDeliveryDateNull() {
                this[this.tableItemLoad.CmrCustomerDeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBringingToWarehousePlateNull() {
                return this.IsNull(this.tableItemLoad.BringingToWarehousePlateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBringingToWarehousePlateNull() {
                this[this.tableItemLoad.BringingToWarehousePlateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHasCmrDeliveryedNull() {
                return this.IsNull(this.tableItemLoad.HasCmrDeliveryedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHasCmrDeliveryedNull() {
                this[this.tableItemLoad.HasCmrDeliveryedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCmrNoNull() {
                return this.IsNull(this.tableItemLoad.CmrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCmrNoNull() {
                this[this.tableItemLoad.CmrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCmrStatusNull() {
                return this.IsNull(this.tableItemLoad.CmrStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCmrStatusNull() {
                this[this.tableItemLoad.CmrStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFirmCustomsArrivalIdNull() {
                return this.IsNull(this.tableItemLoad.FirmCustomsArrivalIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFirmCustomsArrivalIdNull() {
                this[this.tableItemLoad.FirmCustomsArrivalIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ItemLoadRowChangeEvent : global::System.EventArgs {
            
            private ItemLoadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadRowChangeEvent(ItemLoadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ItemLoadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace HekaMOLD.Enterprise.HekaLogisticsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ItemLoadTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ItemLoadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ItemLoad";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("LoadCode", "LoadCode");
            tableMapping.ColumnMappings.Add("LoadDate", "LoadDate");
            tableMapping.ColumnMappings.Add("DischargeDate", "DischargeDate");
            tableMapping.ColumnMappings.Add("OveralWeight", "OveralWeight");
            tableMapping.ColumnMappings.Add("OveralVolume", "OveralVolume");
            tableMapping.ColumnMappings.Add("OveralLadametre", "OveralLadametre");
            tableMapping.ColumnMappings.Add("OverallTotal", "OverallTotal");
            tableMapping.ColumnMappings.Add("CalculationTypePrice", "CalculationTypePrice");
            tableMapping.ColumnMappings.Add("Explanation", "Explanation");
            tableMapping.ColumnMappings.Add("ShipperFirmId", "ShipperFirmId");
            tableMapping.ColumnMappings.Add("BuyerFirmId", "BuyerFirmId");
            tableMapping.ColumnMappings.Add("ItemOrderId", "ItemOrderId");
            tableMapping.ColumnMappings.Add("PlantId", "PlantId");
            tableMapping.ColumnMappings.Add("CreatedUserId", "CreatedUserId");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("UpdatedUserId", "UpdatedUserId");
            tableMapping.ColumnMappings.Add("CreatDate", "CreatDate");
            tableMapping.ColumnMappings.Add("LoadStatusType", "LoadStatusType");
            tableMapping.ColumnMappings.Add("DocumentNo", "DocumentNo");
            tableMapping.ColumnMappings.Add("OrderUploadType", "OrderUploadType");
            tableMapping.ColumnMappings.Add("OrderUploadPointType", "OrderUploadPointType");
            tableMapping.ColumnMappings.Add("OrderTransactionDirectionType", "OrderTransactionDirectionType");
            tableMapping.ColumnMappings.Add("OrderCalculationType", "OrderCalculationType");
            tableMapping.ColumnMappings.Add("LoadOutDate", "LoadOutDate");
            tableMapping.ColumnMappings.Add("CustomerFirmId", "CustomerFirmId");
            tableMapping.ColumnMappings.Add("EntryCustomsId", "EntryCustomsId");
            tableMapping.ColumnMappings.Add("ExitCustomsId", "ExitCustomsId");
            tableMapping.ColumnMappings.Add("DateOfNeed", "DateOfNeed");
            tableMapping.ColumnMappings.Add("OrderNo", "OrderNo");
            tableMapping.ColumnMappings.Add("LoadingDate", "LoadingDate");
            tableMapping.ColumnMappings.Add("InvoiceId", "InvoiceId");
            tableMapping.ColumnMappings.Add("InvoiceStatus", "InvoiceStatus");
            tableMapping.ColumnMappings.Add("InvoiceFreightPrice", "InvoiceFreightPrice");
            tableMapping.ColumnMappings.Add("UserAuthorId", "UserAuthorId");
            tableMapping.ColumnMappings.Add("ShipperCityId", "ShipperCityId");
            tableMapping.ColumnMappings.Add("BuyerCityId", "BuyerCityId");
            tableMapping.ColumnMappings.Add("ShipperCountryId", "ShipperCountryId");
            tableMapping.ColumnMappings.Add("BuyerCountryId", "BuyerCountryId");
            tableMapping.ColumnMappings.Add("ShipperFirmExplanation", "ShipperFirmExplanation");
            tableMapping.ColumnMappings.Add("BuyerFirmExplanation", "BuyerFirmExplanation");
            tableMapping.ColumnMappings.Add("OveralQuantity", "OveralQuantity");
            tableMapping.ColumnMappings.Add("ForexTypeId", "ForexTypeId");
            tableMapping.ColumnMappings.Add("ReadinessDate", "ReadinessDate");
            tableMapping.ColumnMappings.Add("DeliveryFromCustomerDate", "DeliveryFromCustomerDate");
            tableMapping.ColumnMappings.Add("IntendedArrivalDate", "IntendedArrivalDate");
            tableMapping.ColumnMappings.Add("CustomsExplanation", "CustomsExplanation");
            tableMapping.ColumnMappings.Add("T1T2No", "T1T2No");
            tableMapping.ColumnMappings.Add("TClosingDate", "TClosingDate");
            tableMapping.ColumnMappings.Add("ItemPrice", "ItemPrice");
            tableMapping.ColumnMappings.Add("TrailerType", "TrailerType");
            tableMapping.ColumnMappings.Add("HasItemInsurance", "HasItemInsurance");
            tableMapping.ColumnMappings.Add("ItemInsuranceDraftNo", "ItemInsuranceDraftNo");
            tableMapping.ColumnMappings.Add("HasItemDangerous", "HasItemDangerous");
            tableMapping.ColumnMappings.Add("CmrCustomerDeliveryDate", "CmrCustomerDeliveryDate");
            tableMapping.ColumnMappings.Add("BringingToWarehousePlate", "BringingToWarehousePlate");
            tableMapping.ColumnMappings.Add("HasCmrDeliveryed", "HasCmrDeliveryed");
            tableMapping.ColumnMappings.Add("CmrNo", "CmrNo");
            tableMapping.ColumnMappings.Add("CmrStatus", "CmrStatus");
            tableMapping.ColumnMappings.Add("FirmCustomsArrivalId", "FirmCustomsArrivalId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ItemLoad] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ItemLoad] ([LoadCode], [LoadDate], [DischargeDate], [OveralWei" +
                "ght], [OveralVolume], [OveralLadametre], [OverallTotal], [CalculationTypePrice]," +
                " [Explanation], [ShipperFirmId], [BuyerFirmId], [ItemOrderId], [PlantId], [Creat" +
                "edUserId], [UpdatedDate], [UpdatedUserId], [CreatDate], [LoadStatusType], [Docum" +
                "entNo], [OrderUploadType], [OrderUploadPointType], [OrderTransactionDirectionTyp" +
                "e], [OrderCalculationType], [LoadOutDate], [CustomerFirmId], [EntryCustomsId], [" +
                "ExitCustomsId], [DateOfNeed], [OrderNo], [LoadingDate], [InvoiceId], [InvoiceSta" +
                "tus], [InvoiceFreightPrice], [UserAuthorId], [ShipperCityId], [BuyerCityId], [Sh" +
                "ipperCountryId], [BuyerCountryId], [ShipperFirmExplanation], [BuyerFirmExplanati" +
                "on], [OveralQuantity], [ForexTypeId], [ReadinessDate], [DeliveryFromCustomerDate" +
                "], [IntendedArrivalDate], [CustomsExplanation], [T1T2No], [TClosingDate], [ItemP" +
                "rice], [TrailerType], [HasItemInsurance], [ItemInsuranceDraftNo], [HasItemDanger" +
                "ous], [CmrCustomerDeliveryDate], [BringingToWarehousePlate], [HasCmrDeliveryed]," +
                " [CmrNo], [CmrStatus], [FirmCustomsArrivalId]) VALUES (@LoadCode, @LoadDate, @Di" +
                "schargeDate, @OveralWeight, @OveralVolume, @OveralLadametre, @OverallTotal, @Cal" +
                "culationTypePrice, @Explanation, @ShipperFirmId, @BuyerFirmId, @ItemOrderId, @Pl" +
                "antId, @CreatedUserId, @UpdatedDate, @UpdatedUserId, @CreatDate, @LoadStatusType" +
                ", @DocumentNo, @OrderUploadType, @OrderUploadPointType, @OrderTransactionDirecti" +
                "onType, @OrderCalculationType, @LoadOutDate, @CustomerFirmId, @EntryCustomsId, @" +
                "ExitCustomsId, @DateOfNeed, @OrderNo, @LoadingDate, @InvoiceId, @InvoiceStatus, " +
                "@InvoiceFreightPrice, @UserAuthorId, @ShipperCityId, @BuyerCityId, @ShipperCount" +
                "ryId, @BuyerCountryId, @ShipperFirmExplanation, @BuyerFirmExplanation, @OveralQu" +
                "antity, @ForexTypeId, @ReadinessDate, @DeliveryFromCustomerDate, @IntendedArriva" +
                "lDate, @CustomsExplanation, @T1T2No, @TClosingDate, @ItemPrice, @TrailerType, @H" +
                "asItemInsurance, @ItemInsuranceDraftNo, @HasItemDangerous, @CmrCustomerDeliveryD" +
                "ate, @BringingToWarehousePlate, @HasCmrDeliveryed, @CmrNo, @CmrStatus, @FirmCust" +
                "omsArrivalId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DischargeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DischargeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OveralWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralVolume", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OveralVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralLadametre", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OveralLadametre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverallTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OverallTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalculationTypePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CalculationTypePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Explanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Explanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperFirmId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperFirmId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerFirmId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerFirmId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemOrderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemOrderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlantId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlantId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadStatusType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadStatusType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderUploadType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderUploadType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderUploadPointType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderUploadPointType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderTransactionDirectionType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderTransactionDirectionType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderCalculationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderCalculationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadOutDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadOutDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFirmId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFirmId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryCustomsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryCustomsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExitCustomsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExitCustomsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfNeed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfNeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceFreightPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "InvoiceFreightPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserAuthorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserAuthorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperCityId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperCityId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerCityId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerCityId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperCountryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperCountryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerCountryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerCountryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperFirmExplanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperFirmExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerFirmExplanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerFirmExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OveralQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForexTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForexTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReadinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReadinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryFromCustomerDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryFromCustomerDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IntendedArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IntendedArrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsExplanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@T1T2No", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "T1T2No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TClosingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TClosingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ItemPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrailerType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrailerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasItemInsurance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasItemInsurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemInsuranceDraftNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemInsuranceDraftNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasItemDangerous", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasItemDangerous", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CmrCustomerDeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CmrCustomerDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BringingToWarehousePlate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BringingToWarehousePlate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasCmrDeliveryed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasCmrDeliveryed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CmrNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CmrNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CmrStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CmrStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirmCustomsArrivalId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmCustomsArrivalId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ItemLoad] SET [LoadCode] = @LoadCode, [LoadDate] = @LoadDate, [Disc" +
                "hargeDate] = @DischargeDate, [OveralWeight] = @OveralWeight, [OveralVolume] = @O" +
                "veralVolume, [OveralLadametre] = @OveralLadametre, [OverallTotal] = @OverallTota" +
                "l, [CalculationTypePrice] = @CalculationTypePrice, [Explanation] = @Explanation," +
                " [ShipperFirmId] = @ShipperFirmId, [BuyerFirmId] = @BuyerFirmId, [ItemOrderId] =" +
                " @ItemOrderId, [PlantId] = @PlantId, [CreatedUserId] = @CreatedUserId, [UpdatedD" +
                "ate] = @UpdatedDate, [UpdatedUserId] = @UpdatedUserId, [CreatDate] = @CreatDate," +
                " [LoadStatusType] = @LoadStatusType, [DocumentNo] = @DocumentNo, [OrderUploadTyp" +
                "e] = @OrderUploadType, [OrderUploadPointType] = @OrderUploadPointType, [OrderTra" +
                "nsactionDirectionType] = @OrderTransactionDirectionType, [OrderCalculationType] " +
                "= @OrderCalculationType, [LoadOutDate] = @LoadOutDate, [CustomerFirmId] = @Custo" +
                "merFirmId, [EntryCustomsId] = @EntryCustomsId, [ExitCustomsId] = @ExitCustomsId," +
                " [DateOfNeed] = @DateOfNeed, [OrderNo] = @OrderNo, [LoadingDate] = @LoadingDate," +
                " [InvoiceId] = @InvoiceId, [InvoiceStatus] = @InvoiceStatus, [InvoiceFreightPric" +
                "e] = @InvoiceFreightPrice, [UserAuthorId] = @UserAuthorId, [ShipperCityId] = @Sh" +
                "ipperCityId, [BuyerCityId] = @BuyerCityId, [ShipperCountryId] = @ShipperCountryI" +
                "d, [BuyerCountryId] = @BuyerCountryId, [ShipperFirmExplanation] = @ShipperFirmEx" +
                "planation, [BuyerFirmExplanation] = @BuyerFirmExplanation, [OveralQuantity] = @O" +
                "veralQuantity, [ForexTypeId] = @ForexTypeId, [ReadinessDate] = @ReadinessDate, [" +
                "DeliveryFromCustomerDate] = @DeliveryFromCustomerDate, [IntendedArrivalDate] = @" +
                "IntendedArrivalDate, [CustomsExplanation] = @CustomsExplanation, [T1T2No] = @T1T" +
                "2No, [TClosingDate] = @TClosingDate, [ItemPrice] = @ItemPrice, [TrailerType] = @" +
                "TrailerType, [HasItemInsurance] = @HasItemInsurance, [ItemInsuranceDraftNo] = @I" +
                "temInsuranceDraftNo, [HasItemDangerous] = @HasItemDangerous, [CmrCustomerDeliver" +
                "yDate] = @CmrCustomerDeliveryDate, [BringingToWarehousePlate] = @BringingToWareh" +
                "ousePlate, [HasCmrDeliveryed] = @HasCmrDeliveryed, [CmrNo] = @CmrNo, [CmrStatus]" +
                " = @CmrStatus, [FirmCustomsArrivalId] = @FirmCustomsArrivalId WHERE (([Id] = @Or" +
                "iginal_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DischargeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DischargeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OveralWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralVolume", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OveralVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralLadametre", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OveralLadametre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverallTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OverallTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalculationTypePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "CalculationTypePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Explanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Explanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperFirmId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperFirmId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerFirmId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerFirmId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemOrderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemOrderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlantId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlantId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedUserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadStatusType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadStatusType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderUploadType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderUploadType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderUploadPointType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderUploadPointType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderTransactionDirectionType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderTransactionDirectionType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderCalculationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderCalculationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadOutDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadOutDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFirmId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFirmId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryCustomsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryCustomsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExitCustomsId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExitCustomsId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfNeed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfNeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoadingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoadingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceFreightPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "InvoiceFreightPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserAuthorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserAuthorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperCityId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperCityId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerCityId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerCityId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperCountryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperCountryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerCountryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerCountryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperFirmExplanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperFirmExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyerFirmExplanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyerFirmExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OveralQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OveralQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForexTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForexTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReadinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReadinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryFromCustomerDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryFromCustomerDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IntendedArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IntendedArrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomsExplanation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomsExplanation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@T1T2No", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "T1T2No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TClosingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TClosingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ItemPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrailerType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrailerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasItemInsurance", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasItemInsurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemInsuranceDraftNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemInsuranceDraftNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasItemDangerous", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasItemDangerous", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CmrCustomerDeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CmrCustomerDeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BringingToWarehousePlate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BringingToWarehousePlate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasCmrDeliveryed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasCmrDeliveryed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CmrNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CmrNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CmrStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CmrStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirmCustomsArrivalId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmCustomsArrivalId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["HekaEntities"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, LoadCode, LoadDate, DischargeDate, OveralWeight, OveralVolume, OveralLadametre, OverallTotal, CalculationTypePrice, Explanation, ShipperFirmId, BuyerFirmId, ItemOrderId, PlantId, CreatedUserId, UpdatedDate, UpdatedUserId, CreatDate, LoadStatusType, DocumentNo, OrderUploadType, OrderUploadPointType, OrderTransactionDirectionType, OrderCalculationType, LoadOutDate, CustomerFirmId, EntryCustomsId, ExitCustomsId, DateOfNeed, OrderNo, LoadingDate, InvoiceId, InvoiceStatus, InvoiceFreightPrice, UserAuthorId, ShipperCityId, BuyerCityId, ShipperCountryId, BuyerCountryId, ShipperFirmExplanation, BuyerFirmExplanation, OveralQuantity, ForexTypeId, ReadinessDate, DeliveryFromCustomerDate, IntendedArrivalDate, CustomsExplanation, T1T2No, TClosingDate, ItemPrice, TrailerType, HasItemInsurance, ItemInsuranceDraftNo, HasItemDangerous, CmrCustomerDeliveryDate, BringingToWarehousePlate, HasCmrDeliveryed, CmrNo, CmrStatus, FirmCustomsArrivalId FROM dbo.ItemLoad";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HekaLogisticsDataSet.ItemLoadDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HekaLogisticsDataSet.ItemLoadDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HekaLogisticsDataSet.ItemLoadDataTable dataTable = new HekaLogisticsDataSet.ItemLoadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HekaLogisticsDataSet.ItemLoadDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HekaLogisticsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ItemLoad");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string LoadCode, 
                    global::System.Nullable<global::System.DateTime> LoadDate, 
                    global::System.Nullable<global::System.DateTime> DischargeDate, 
                    global::System.Nullable<decimal> OveralWeight, 
                    global::System.Nullable<decimal> OveralVolume, 
                    global::System.Nullable<decimal> OveralLadametre, 
                    global::System.Nullable<decimal> OverallTotal, 
                    global::System.Nullable<decimal> CalculationTypePrice, 
                    string Explanation, 
                    global::System.Nullable<int> ShipperFirmId, 
                    global::System.Nullable<int> BuyerFirmId, 
                    global::System.Nullable<int> ItemOrderId, 
                    global::System.Nullable<int> PlantId, 
                    global::System.Nullable<int> CreatedUserId, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    global::System.Nullable<int> UpdatedUserId, 
                    global::System.Nullable<global::System.DateTime> CreatDate, 
                    global::System.Nullable<int> LoadStatusType, 
                    string DocumentNo, 
                    global::System.Nullable<int> OrderUploadType, 
                    global::System.Nullable<int> OrderUploadPointType, 
                    global::System.Nullable<int> OrderTransactionDirectionType, 
                    global::System.Nullable<int> OrderCalculationType, 
                    global::System.Nullable<global::System.DateTime> LoadOutDate, 
                    global::System.Nullable<int> CustomerFirmId, 
                    global::System.Nullable<int> EntryCustomsId, 
                    global::System.Nullable<int> ExitCustomsId, 
                    global::System.Nullable<global::System.DateTime> DateOfNeed, 
                    string OrderNo, 
                    global::System.Nullable<global::System.DateTime> LoadingDate, 
                    global::System.Nullable<int> InvoiceId, 
                    global::System.Nullable<int> InvoiceStatus, 
                    global::System.Nullable<decimal> InvoiceFreightPrice, 
                    global::System.Nullable<int> UserAuthorId, 
                    global::System.Nullable<int> ShipperCityId, 
                    global::System.Nullable<int> BuyerCityId, 
                    global::System.Nullable<int> ShipperCountryId, 
                    global::System.Nullable<int> BuyerCountryId, 
                    string ShipperFirmExplanation, 
                    string BuyerFirmExplanation, 
                    global::System.Nullable<int> OveralQuantity, 
                    global::System.Nullable<int> ForexTypeId, 
                    global::System.Nullable<global::System.DateTime> ReadinessDate, 
                    global::System.Nullable<global::System.DateTime> DeliveryFromCustomerDate, 
                    global::System.Nullable<global::System.DateTime> IntendedArrivalDate, 
                    string CustomsExplanation, 
                    string T1T2No, 
                    global::System.Nullable<global::System.DateTime> TClosingDate, 
                    global::System.Nullable<decimal> ItemPrice, 
                    global::System.Nullable<int> TrailerType, 
                    global::System.Nullable<bool> HasItemInsurance, 
                    string ItemInsuranceDraftNo, 
                    global::System.Nullable<bool> HasItemDangerous, 
                    global::System.Nullable<global::System.DateTime> CmrCustomerDeliveryDate, 
                    string BringingToWarehousePlate, 
                    global::System.Nullable<bool> HasCmrDeliveryed, 
                    string CmrNo, 
                    global::System.Nullable<int> CmrStatus, 
                    global::System.Nullable<int> FirmCustomsArrivalId) {
            if ((LoadCode == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LoadCode));
            }
            if ((LoadDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(LoadDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DischargeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DischargeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OveralWeight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(OveralWeight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((OveralVolume.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(OveralVolume.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((OveralLadametre.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(OveralLadametre.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OverallTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(OverallTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CalculationTypePrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(CalculationTypePrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Explanation == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Explanation));
            }
            if ((ShipperFirmId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ShipperFirmId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((BuyerFirmId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(BuyerFirmId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ItemOrderId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(ItemOrderId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PlantId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(PlantId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CreatedUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(CreatedUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((UpdatedUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(UpdatedUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((CreatDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(CreatDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((LoadStatusType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(LoadStatusType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((DocumentNo == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(DocumentNo));
            }
            if ((OrderUploadType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(OrderUploadType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OrderUploadPointType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(OrderUploadPointType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OrderTransactionDirectionType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(OrderTransactionDirectionType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((OrderCalculationType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(OrderCalculationType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((LoadOutDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(LoadOutDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((CustomerFirmId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(CustomerFirmId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((EntryCustomsId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(EntryCustomsId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ExitCustomsId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(ExitCustomsId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((DateOfNeed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(DateOfNeed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((OrderNo == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(OrderNo));
            }
            if ((LoadingDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(LoadingDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((InvoiceId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(InvoiceId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((InvoiceStatus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(InvoiceStatus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((InvoiceFreightPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(InvoiceFreightPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((UserAuthorId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(UserAuthorId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((ShipperCityId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(ShipperCityId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((BuyerCityId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(BuyerCityId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ShipperCountryId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(ShipperCountryId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((BuyerCountryId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(BuyerCountryId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ShipperFirmExplanation == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ShipperFirmExplanation));
            }
            if ((BuyerFirmExplanation == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(BuyerFirmExplanation));
            }
            if ((OveralQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(OveralQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ForexTypeId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(ForexTypeId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((ReadinessDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(ReadinessDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((DeliveryFromCustomerDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(DeliveryFromCustomerDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((IntendedArrivalDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(IntendedArrivalDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((CustomsExplanation == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(CustomsExplanation));
            }
            if ((T1T2No == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(T1T2No));
            }
            if ((TClosingDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(TClosingDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((ItemPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(ItemPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((TrailerType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((int)(TrailerType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((HasItemInsurance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(HasItemInsurance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((ItemInsuranceDraftNo == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(ItemInsuranceDraftNo));
            }
            if ((HasItemDangerous.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(HasItemDangerous.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((CmrCustomerDeliveryDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(CmrCustomerDeliveryDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((BringingToWarehousePlate == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(BringingToWarehousePlate));
            }
            if ((HasCmrDeliveryed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((bool)(HasCmrDeliveryed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((CmrNo == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(CmrNo));
            }
            if ((CmrStatus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(CmrStatus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((FirmCustomsArrivalId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(FirmCustomsArrivalId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LoadCode, 
                    global::System.Nullable<global::System.DateTime> LoadDate, 
                    global::System.Nullable<global::System.DateTime> DischargeDate, 
                    global::System.Nullable<decimal> OveralWeight, 
                    global::System.Nullable<decimal> OveralVolume, 
                    global::System.Nullable<decimal> OveralLadametre, 
                    global::System.Nullable<decimal> OverallTotal, 
                    global::System.Nullable<decimal> CalculationTypePrice, 
                    string Explanation, 
                    global::System.Nullable<int> ShipperFirmId, 
                    global::System.Nullable<int> BuyerFirmId, 
                    global::System.Nullable<int> ItemOrderId, 
                    global::System.Nullable<int> PlantId, 
                    global::System.Nullable<int> CreatedUserId, 
                    global::System.Nullable<global::System.DateTime> UpdatedDate, 
                    global::System.Nullable<int> UpdatedUserId, 
                    global::System.Nullable<global::System.DateTime> CreatDate, 
                    global::System.Nullable<int> LoadStatusType, 
                    string DocumentNo, 
                    global::System.Nullable<int> OrderUploadType, 
                    global::System.Nullable<int> OrderUploadPointType, 
                    global::System.Nullable<int> OrderTransactionDirectionType, 
                    global::System.Nullable<int> OrderCalculationType, 
                    global::System.Nullable<global::System.DateTime> LoadOutDate, 
                    global::System.Nullable<int> CustomerFirmId, 
                    global::System.Nullable<int> EntryCustomsId, 
                    global::System.Nullable<int> ExitCustomsId, 
                    global::System.Nullable<global::System.DateTime> DateOfNeed, 
                    string OrderNo, 
                    global::System.Nullable<global::System.DateTime> LoadingDate, 
                    global::System.Nullable<int> InvoiceId, 
                    global::System.Nullable<int> InvoiceStatus, 
                    global::System.Nullable<decimal> InvoiceFreightPrice, 
                    global::System.Nullable<int> UserAuthorId, 
                    global::System.Nullable<int> ShipperCityId, 
                    global::System.Nullable<int> BuyerCityId, 
                    global::System.Nullable<int> ShipperCountryId, 
                    global::System.Nullable<int> BuyerCountryId, 
                    string ShipperFirmExplanation, 
                    string BuyerFirmExplanation, 
                    global::System.Nullable<int> OveralQuantity, 
                    global::System.Nullable<int> ForexTypeId, 
                    global::System.Nullable<global::System.DateTime> ReadinessDate, 
                    global::System.Nullable<global::System.DateTime> DeliveryFromCustomerDate, 
                    global::System.Nullable<global::System.DateTime> IntendedArrivalDate, 
                    string CustomsExplanation, 
                    string T1T2No, 
                    global::System.Nullable<global::System.DateTime> TClosingDate, 
                    global::System.Nullable<decimal> ItemPrice, 
                    global::System.Nullable<int> TrailerType, 
                    global::System.Nullable<bool> HasItemInsurance, 
                    string ItemInsuranceDraftNo, 
                    global::System.Nullable<bool> HasItemDangerous, 
                    global::System.Nullable<global::System.DateTime> CmrCustomerDeliveryDate, 
                    string BringingToWarehousePlate, 
                    global::System.Nullable<bool> HasCmrDeliveryed, 
                    string CmrNo, 
                    global::System.Nullable<int> CmrStatus, 
                    global::System.Nullable<int> FirmCustomsArrivalId, 
                    int Original_Id) {
            if ((LoadCode == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LoadCode));
            }
            if ((LoadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(LoadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DischargeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DischargeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((OveralWeight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(OveralWeight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((OveralVolume.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(OveralVolume.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((OveralLadametre.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(OveralLadametre.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OverallTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(OverallTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CalculationTypePrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(CalculationTypePrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Explanation == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Explanation));
            }
            if ((ShipperFirmId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ShipperFirmId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((BuyerFirmId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(BuyerFirmId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ItemOrderId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ItemOrderId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PlantId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(PlantId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CreatedUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(CreatedUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UpdatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(UpdatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((UpdatedUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(UpdatedUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((CreatDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(CreatDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((LoadStatusType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(LoadStatusType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((DocumentNo == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(DocumentNo));
            }
            if ((OrderUploadType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(OrderUploadType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OrderUploadPointType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(OrderUploadPointType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OrderTransactionDirectionType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(OrderTransactionDirectionType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((OrderCalculationType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(OrderCalculationType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((LoadOutDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(LoadOutDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((CustomerFirmId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(CustomerFirmId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((EntryCustomsId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(EntryCustomsId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ExitCustomsId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ExitCustomsId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((DateOfNeed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(DateOfNeed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((OrderNo == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(OrderNo));
            }
            if ((LoadingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(LoadingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((InvoiceId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(InvoiceId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((InvoiceStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(InvoiceStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((InvoiceFreightPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(InvoiceFreightPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((UserAuthorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(UserAuthorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((ShipperCityId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(ShipperCityId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((BuyerCityId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(BuyerCityId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ShipperCountryId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(ShipperCountryId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((BuyerCountryId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(BuyerCountryId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ShipperFirmExplanation == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(ShipperFirmExplanation));
            }
            if ((BuyerFirmExplanation == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(BuyerFirmExplanation));
            }
            if ((OveralQuantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(OveralQuantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ForexTypeId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(ForexTypeId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((ReadinessDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(ReadinessDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((DeliveryFromCustomerDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(DeliveryFromCustomerDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((IntendedArrivalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(IntendedArrivalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((CustomsExplanation == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(CustomsExplanation));
            }
            if ((T1T2No == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(T1T2No));
            }
            if ((TClosingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(TClosingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((ItemPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(ItemPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((TrailerType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(TrailerType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((HasItemInsurance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(HasItemInsurance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((ItemInsuranceDraftNo == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(ItemInsuranceDraftNo));
            }
            if ((HasItemDangerous.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(HasItemDangerous.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((CmrCustomerDeliveryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(CmrCustomerDeliveryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((BringingToWarehousePlate == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(BringingToWarehousePlate));
            }
            if ((HasCmrDeliveryed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(HasCmrDeliveryed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((CmrNo == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(CmrNo));
            }
            if ((CmrStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(CmrStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((FirmCustomsArrivalId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(FirmCustomsArrivalId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ItemLoadTableAdapter _itemLoadTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ItemLoadTableAdapter ItemLoadTableAdapter {
            get {
                return this._itemLoadTableAdapter;
            }
            set {
                this._itemLoadTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._itemLoadTableAdapter != null) 
                            && (this._itemLoadTableAdapter.Connection != null))) {
                    return this._itemLoadTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._itemLoadTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(HekaLogisticsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._itemLoadTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ItemLoad.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._itemLoadTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(HekaLogisticsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._itemLoadTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ItemLoad.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._itemLoadTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(HekaLogisticsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._itemLoadTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ItemLoad.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._itemLoadTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(HekaLogisticsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._itemLoadTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._itemLoadTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._itemLoadTableAdapter != null)) {
                    revertConnections.Add(this._itemLoadTableAdapter, this._itemLoadTableAdapter.Connection);
                    this._itemLoadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._itemLoadTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._itemLoadTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._itemLoadTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._itemLoadTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._itemLoadTableAdapter != null)) {
                    this._itemLoadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._itemLoadTableAdapter]));
                    this._itemLoadTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591